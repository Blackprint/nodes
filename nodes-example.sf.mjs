!async function(t,e){"use strict";async function a(t){return"undefined"!=typeof sf&&void 0!==sf.loader?await sf.loader.mjs(t):Promise.all(t.map(t=>import(t)))}e.exports&&e.exports!==globalThis&&Object.defineProperty(e.exports,"__esModule",{value:!0}),a.task=function(){return"undefined"!=typeof sf&&void 0!==sf.loader?sf.loader.task:null},t.templates||(t.templates={});var s=sf.dom||sf.$,l=t.templates;t._sf_internal=t._sf_internal||{body_map:{},_replace(t,e){let a=s(e);return this.body_map[t]&&this.body_map[t].remove(),this.reinitViews&&this.reinitViews(a),this.body_map[t]=a},append(t,e){s(document.body).append(this._replace.apply(this,arguments))},prepend(t,e){s(document.body).prepend(this._replace.apply(this,arguments))}};await a.task();let n=t.Blackprint.loadScope({url:import.meta.url}),p=sf.$,i=await n.getContext("Example");l["BPIC/Example/Button.sf"]='<div class="node event" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content">\x3c!-- Element event binding-> https://github.com/ScarletsFiction/ScarletsFrame/wiki/Element-Event --\x3e<div class="button" @click="clicked(event)"><a>Trigger</a></div><div class="right-port"><sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',n.Sketch.registerInterface("BPIC/Example/Button",class extends i.IFace.Button{init(){}clicked(t){i.log("BPIC/Example/Button (HTML Element)","'Trigger' button clicked, going to run the handler"),this.node.clicked?.(t)}}),l["BPIC/Example/Input.sf"]='<div class="node input" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/routes.sf"></sf-template><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content"><textarea sf-bind="data.value" @input="textChanged(event)"></textarea><div class="right-port"><sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',n.Sketch.registerInterface("BPIC/Example/Input",class extends i.IFace.Input{constructor(t){super(t);let e=this,a=!1;e.data.on$value=function(s){a||(a=!0,p.afterRepaint().then(function(){a=!1;var t=e.$el("textarea");t[0].offsetWidth>150||t[0].offsetHeight>60||(s.length<8?t.attr("style",""):s.length>=8&&s.length<14?t.attr("style","width:"+10*s.length+"px"):s.length>=14&&t.attr("style","width:140px;height:50px"))}),t.notifyEditorDataChanged())}}textChanged(t){}}),l["BPIC/Example/Logger.sf"]='<div class="node" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/routes.sf"></sf-template><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content"><textarea value="{{log}}"></textarea><div class="left-port"><sf-template path="Blackprint/nodes/template/input-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',n.Sketch.registerInterface("BPIC/Example/Logger",class extends i.IFace.Logger{m2v$log(t){var e=this.$el("textarea");null==e[0]||e[0].offsetWidth>150||e[0].offsetHeight>60||(t.length<8?e.attr("style",""):t.length>=8&&t.length<14?e.attr("style","width:"+10*t.length+"px"):t.length>=14&&e.attr("style","width:140px;height:50px"))}})}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-example.sf.mjs.map