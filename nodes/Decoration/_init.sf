## js-global
// This script will run first, and then the other files
// depends on blackprint.config.js configuration

// Prepare stuff when the page is loading
// maybe like loading our dependencies for the nodes


// Because .js and .sf is separated
// we also need to call loadScope just like _init.js
let Blackprint = window.Blackprint.loadScope({
	// You can find the URL on Blackprint menu -> Modules
	// This will also be exported to JSON if this module's nodes is being used
	url: import.meta.url,
});

// Use sQuery
let $ = sf.$;

// Global shared context (wait it to avoid race condition)
let Context = await Blackprint.getContext('Decoration');

// Load colorpicker deps
var [ Coloris ] = await Blackprint.DepsLoader.js({
	window: ['Coloris'],

	// need to use 'npm install' first or must exist on node_modules, will dynamically imported
	local: ['@melloware/coloris'],

	// for browser, Deno, or supported environment that have internet access
	cdn: ["https://cdn.jsdelivr.net/npm/@melloware/coloris@0.25.0/dist/umd/coloris.min.js"]
});

await Blackprint.DepsLoader.css({
	local: ['@melloware/coloris/dist/coloris.css'],
	cdn: ["https://cdn.jsdelivr.net/npm/@melloware/coloris@0.25.0/dist/coloris.min.css"]
});