## html
<div class="node" style="transform: translate({{ x }}px, {{ y }}px)">
  <sf-template path="Blackprint/nodes/template/header.sf"></sf-template>

  <div class="content">
    <textarea sf-bind="data.value"></textarea>
  </div>
</div>

## scss-global
// Element name based on current path, BPIC/Decoration/Text/Notes.sf
sf-space[blackprint] bpic-decoration-text-notes .node {
	textarea{
		width: 249px;
		height: 87px;
		margin-left: 5px;
	}
}


## js-global
Blackprint.Sketch.registerInterface('BPIC/Decoration/Text/Notes',
class extends Blackprint.Interface{
	constructor(node){
		super(node);
		this.data = new DecorationTextNotesData(this);
	}

	init(){
		 // Refresh size
		setTimeout(()=> this.data.on$value(), 1000);
	}
});

class DecorationTextNotesData {
	#iface = null;
	#waitRepaint = false;

	constructor(iface){
		this.#iface = iface;
		this.value = '';
	}

	// Triggered when 'value' was changed from view/model
	// For refreshing texbox's height when user typing
	on$value(now){
		if(this.#waitRepaint) return;
		let iface = this.#iface;
		let node = iface.node;

		iface.$el('textarea').css('height', "5px");

		this.#waitRepaint = true;
		$.afterRepaint().then(()=>{
			var el = iface.$el('textarea');
			el.css('height', (el[0].scrollHeight)+"px");
			this.#waitRepaint = false;

			node.syncOut('value', now);
		});
	}
}