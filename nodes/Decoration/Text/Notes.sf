## html
<div class="node" style="transform: translate({{ x }}px, {{ y }}px)">
  <sf-template path="Blackprint/nodes/template/header.sf"></sf-template>

  <div class="content">
    <textarea sf-bind="data.value"></textarea>
  </div>
</div>

## scss-global
// Element name based on current path, BPIC/Decoration/Text/Notes.sf
sf-space[blackprint] bpic-decoration-text-notes .node {
	textarea{
		width: 249px;
		height: 87px;
		margin-left: 5px;
	}
}


## js-global
Blackprint.Sketch.registerInterface('BPIC/Decoration/Text/Notes',
class extends Blackprint.Interface{
	constructor(node){
		super(node);
		let iface = this;
		
		var waitRepaint = false;
		async function refreshHeight(){
			waitRepaint = true;
			await $.afterRepaint();

			var el = iface.$el('textarea');
			el.css('height', (el[0].scrollHeight)+"px");
			waitRepaint = false;
		}

		iface.data = {
			value:'',

			// Triggered when 'value' was changed from view/model
			on$value(now){
				if(waitRepaint) return;
				iface.$el('textarea').css('height', "5px");
				refreshHeight();

				node.syncOut('value', now);
			}
		};
	}

	init(){
		 // Refresh size
		setTimeout(()=> this.data.on$value(), 1000);
	}
});