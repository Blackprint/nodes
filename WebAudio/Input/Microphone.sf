## html
<div class="node input" style="transform: translate({{ x }}px, {{ y }}px)">
	<sf-template path="Blackprint/nodes/template/header.sf"></sf-template>

	<div class="content">
		<select sf-bind="selected">
			<option value="{{val.i}}" sf-each="val in devices">
				{{val.label}}
			</option>
		</select>

		<div class="right-port">
			<sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template>
		</div>
	</div>
</div>

## scss-global
bpic-webaudio-input-microphone {
	select{
		max-width: 100px;
		margin: 1px 0 5px 5px;
	}
}

## js-global
// Sketch Interface-> BPIC/WebAudio/Input/Microphone
// This will extend the original interface, and redesigned for sketch interface
Blackprint.Sketch.registerInterface('BPIC/WebAudio/Input/Microphone',
class MicrophoneIFace extends Context.IFace.Microphone {
	constructor(node){
		super(node);
	}

	// When the HTML was attached on DOM tree
	init(){
		super.init();
	}

	// When the element was cloned
	initClone(){
		this.init();
	}

	// Event listener for 'selected'
	// View data to model only (user interact with the HTML)
	v2m$selected(now){
		this.select(now);
	}

	// After HTML have reloaded
	// hotReloadedHTML(){}

	// When reloading have been completed
	hotReloaded(){
		// Clear event listener before re-register it on init
		this.output.Node.off('connecting disconnect');
		this.init();
	}

	hotReload(){
		// When reloading process
	}
});