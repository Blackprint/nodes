!async function(t,e){"use strict";e.exports&&e.exports!==globalThis&&Object.defineProperty(e.exports,"__esModule",{value:!0}),t.templates||(t.templates={});var s=sf.dom||sf.$,a=t.templates;t._sf_internal=t._sf_internal||{body_map:{},_replace(t,e){let a=s(e);return this.body_map[t]&&this.body_map[t].remove(),this.reinitViews&&this.reinitViews(a),this.body_map[t]=a},append(t,e){s(document.body).append(this._replace.apply(this,arguments))},prepend(t,e){s(document.body).prepend(this._replace.apply(this,arguments))}};let p=t.Blackprint.loadScope({url:import.meta.url}),i=sf.$,l=await p.getContext("FlowControl");a["BPIC/FlowControl/Interface.sf"]='<div class="node {{type}}" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/routes.sf"></sf-template><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content"><div class="left-port" style="margin: {{leftPortMargin}}px"><sf-template path="Blackprint/nodes/template/input-port.sf"></sf-template></div><div class="right-port" style="margin: {{rightPortMargin}}px"><sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',p.Sketch.registerInterface("BPIC/FlowControl/Interface",class extends l.IFace.Interface{constructor(t){super(t),this.leftPortMargin="",this.rightPortMargin=""}init(t){i(".title .icon",t).prepend('<i class="fa fa-sign-in-alt"></i>')}})}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-flowcontrol.sf.mjs.map