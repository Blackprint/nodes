## html
<placeholder-inf-node class="node" style="transform: translate({{ x }}px, {{ y }}px)">
  <sf-template path="Blackprint/nodes/template/header.sf"></sf-template>

  <div class="content">
    <sf-template path="BPAO/placeholder/template/placeholder.sf"></sf-template>
    <div class="right-port">
      <sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template>
    </div>
  </div>
</placeholder-inf-node>

## scss-global
body{}

## js-global
// To be used for Visual and Standalone
// As we don't call any Browser API
class PlaceHolder extends Blackprint.Node{
	static construct(){
		console.log('ehlo');
	}
}

// == Handler ==
// Just some logic to handle, can be used for browser/non-browser
Blackprint.registerNode('placeholder1/placeholder2', function(handler, node){
	node.title = 'title';
	node.description = 'description';
	node.type = 'placeholder-inf';

	handler.outputs = {
		Test: 123
	};
});

// == Blackprint Visual Engine ==
// For Browser
Blackprint.registerInterface('placeholder-inf', {
	extend: PlaceHolder,
	template: 'BPAO/placeholder/placeholder.sf'
});

// == For Standalone Engine ==
// For Non-browser
Blackprint.Engine.registerInterface('placeholder-inf', {
	extend: PlaceHolder
});