{"version":3,"sources":["nodes-data.sf.css","nodes/Data/Object/Get/Value.sf","nodes/Data/Minimal.sf"],"names":[],"mappings":"AAEA,gC,CCqBC,a,CACC,uB,CACA,W,CACA,S,CDlBF,kC,CAAA,mC,CEmBC,sB,CFhBD,0C,CEqBE,sB,CACC,sB,CFlBH,kD,CAAA,mD,CEqBE,6B,CFlBF,4C,CEqBE,wB,CACC,U,CFlBH,mD,CEoBG,4B,CFjBH,6C,CEqBE,uB,CFlBF,qD,CEoBG,2B,CFjBH,yC,CEsBE,iB,CACC,iB,CACA,U,CACA,iB,CACA,S,CFnBH,4B,CEwBC,iB,CFrBD,kC,CEuBE,oB,CFpBF,uB,CEyBC,uB,CACC,4B,CFtBF,yB,CE0BC,W,CACC,iB,CACA,iB,CACA,qB,CACA,iB,CACA,mB,CFvBF,gC,CEyBE,e","file":"nodes-data.sf.css","sourcesContent":["/* Blackprint \n MIT Licensed */\nbpic-data-object-get-value input {\n  display: block;\n  width: calc(100% - 10px);\n  padding: 5px;\n  outline: none;\n}\nbpic-data-minimal .left-port .name, bpic-data-minimal .right-port .name {\n  display: none !important;\n}\nbpic-data-minimal .show-port-name .content {\n  display: flex !important;\n  margin-top: 0 !important;\n}\nbpic-data-minimal .show-port-name .left-port .name, bpic-data-minimal .show-port-name .right-port .name {\n  display: inline-flex !important;\n}\nbpic-data-minimal .show-port-name .left-port {\n  margin-right: 0 !important;\n  width: auto;\n}\nbpic-data-minimal .show-port-name .left-port .input {\n  padding-right: 10px !important;\n}\nbpic-data-minimal .show-port-name .right-port {\n  margin-left: 0 !important;\n}\nbpic-data-minimal .show-port-name .right-port .output {\n  padding-left: 10px !important;\n}\nbpic-data-minimal .show-port-name .center {\n  position: relative;\n  text-align: center;\n  width: 15px;\n  align-self: center;\n  z-index: 1;\n}\nbpic-data-minimal .left-port {\n  margin-right: 17px;\n}\nbpic-data-minimal .left-port input {\n  display: inline-block;\n}\nbpic-data-minimal > .node {\n  outline: 1px dashed white;\n  box-shadow: 0 0 10px 2px black;\n}\nbpic-data-minimal .center {\n  height: 100%;\n  position: relative;\n  text-align: center;\n  vertical-align: middle;\n  margin-left: -15px;\n  display: inline-flex;\n}\nbpic-data-minimal .center.port-2 {\n  margin-top: 11px;\n}\n\n/*# sourceMappingURL=nodes-data.sf.css.map */","## html\n<div class=\"node\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\n  <sf-template path=\"Blackprint/nodes/template/routes.sf\"></sf-template>\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\n\n  <div class=\"content\">\n    <input style=\"display: {{ node.hasFieldData || node.hasFieldCable ? 'none' : '' }}\" sf-bind=\"data.props\" placeholder=\"Type the properties here...\">\n\n    <div class=\"left-port\">\n      <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\n    </div>\n\n    <div class=\"right-port\">\n      <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\n    </div>\n  </div>\n\n  <sf-template path=\"Blackprint/nodes/template/other.sf\"></sf-template>\n</div>\n\n## scss-global\nbpic-data-object-get-value{\n\tinput{\n\t\tdisplay: block;\n\t\twidth: calc(100% - 10px);\n\t\tpadding: 5px;\n    outline: none;\n\t}\n}\n\n## js-global\nBlackprint.Sketch.registerInterface('BPIC/Data/Object/Get/Value',\nclass extends Context.IFace.GetValue { });\n\n// ToDo: add field suggestion","## html\n<div :class=\"node {{ showPortName ? 'show-port-name' : '' }}\" style=\"transform:translate({{ x }}px,{{ y }}px)\">\n  <sf-template path=\"Blackprint/nodes/template/routes.sf\"></sf-template>\n  <div class=\"content\">\n\t<div class=\"left-port\">\n\t  <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\n\t</div>\n\n  \t<div class=\"center port-{{ _portLen }}\"\n\t\t@contextmenu.stopAll.prevent=\"nodeMenu(event)\"\n\t\t@dragmove=\"moveNode(event)\"\n\t\t@pointerdown=\"swapZIndex(event)\"\n\t\t@pointerover=\"nodeHovered(event)\"\n\t  \t@pointerout=\"nodeUnhovered(event)\"\n\t></div>\n\n\t<div class=\"right-port\">\n\t  <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\n\t</div>\n  </div>\n  \n  <sf-template path=\"Blackprint/nodes/template/other.sf\"></sf-template>\n</div>\n\n## scss-global\nbpic-data-minimal {\n\t.left-port .name, .right-port .name {\n\t\tdisplay: none !important;\n\t}\n\n\t.show-port-name {\n\t\t.content{\n\t\t\tdisplay: flex !important;\n\t\t\tmargin-top: 0 !important;\n\t\t}\n\t\t.left-port .name, .right-port .name {\n\t\t\tdisplay: inline-flex !important;\n\t\t}\n\t\t.left-port {\n\t\t\tmargin-right: 0 !important;\n\t\t\twidth: auto;\n\t\t\t.input {\n\t\t\t\tpadding-right: 10px !important;\n\t\t\t}\n\t\t}\n\t\t.right-port {\n\t\t\tmargin-left: 0 !important;\n\t\t\t.output {\n\t\t\t\tpadding-left: 10px !important;\n\t\t\t}\n\t\t}\n\n\t\t.center {\n\t\t\tposition: relative;\n\t\t\ttext-align: center;\n\t\t\twidth: 15px;\n\t\t\talign-self: center;\n\t\t\tz-index: 1;\n\t\t}\n\t}\n\n\t.left-port {\n\t\tmargin-right: 17px;\n\t\tinput {\n\t\t\tdisplay: inline-block;\n\t\t}\n\t}\n\n\t& > .node {\n\t\toutline: 1px dashed white;\n\t\tbox-shadow: 0 0 10px 2px black;\n\t}\n\n\t.center {\n\t\theight: 100%;\n\t\tposition: relative;\n\t\ttext-align: center;\n\t\tvertical-align: middle;\n\t\tmargin-left: -15px;\n\t\tdisplay: inline-flex;\n\t\t&.port-2 {\n\t\t\tmargin-top: 11px;\n\t\t}\n\t}\n}\n\n## js-global\n// Register with default interface\nBlackprint.Sketch.registerInterface(\"BPIC/Data/Minimal\",\nclass extends Context.IFace.DataMinimal {\n\tconstructor(node){\n\t\tsuper(node);\n\t\tthis.showPortName = false;\n\t\tthis._portLen = 0;\n\t}\n\n\tinit(el){ // Run once\n\t\tthis.initClone(el);\n\n\t\tlet inputs = this.input;\n\t\tfor(let key in inputs) this._portLen++;\n\t}\n\n\tinitClone(el){ // Run multiple times if the nodes element is cloned to different container\n\t\tlet $el = $('.center', el);\n\t\tif($el[0] == null) return;\n\n\t\t$el.append(this.node.createIcon());\n\t}\n});"]}