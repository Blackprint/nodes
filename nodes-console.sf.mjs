!async function(e,t){"use strict";t.exports&&t.exports!==globalThis&&Object.defineProperty(t.exports,"__esModule",{value:!0}),e.templates||(e.templates={});var s=sf.dom||sf.$,a=e.templates;e._sf_internal=e._sf_internal||{body_map:{},_replace(e,t){let a=s(t);return this.body_map[e]&&this.body_map[e].remove(),this.reinitViews&&this.reinitViews(a),this.body_map[e]=a},append(e,t){s(document.body).append(this._replace.apply(this,arguments))},prepend(e,t){s(document.body).prepend(this._replace.apply(this,arguments))}};let l=e.Blackprint.loadScope({url:import.meta.url}),p=(sf.$,await l.getContext("Console"));a["BPIC/Console/Log.sf"]='<div class="node" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/routes.sf"></sf-template><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content"><textarea value="{{log}}"></textarea><div class="left-port"><sf-template path="Blackprint/nodes/template/input-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',l.Sketch.registerInterface("BPIC/Console/Log",class extends p.IFace.Logger{m2v$log(e){var t=this.$el("textarea");null!=t[0]&&(t[0].offsetWidth>150||t[0].offsetHeight>60||(e.length<8?t.attr("style",""):e.length>=8&&e.length<14?t.attr("style","width:"+10*e.length+"px"):e.length>=14&&t.attr("style","width:140px;height:50px")))}})}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-console.sf.mjs.map